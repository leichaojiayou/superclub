const App = getApp();
const clubApi = App.api('clubApi');
const wxService = App.wxService;
const util = require('../../../utils/util')
Page({
    data: {
        page: {
            club_logo_img: util.getClubImg() + 'club_logo.jpg',
            club_statistics_icon: util.getClubImg() + 'member@2x.png',
            img: util.getClubImg() + 'black-errow@2x.png',
            grade: {
                lv0: util.getClubImg('_lv0'),
                lv1: util.getClubImg('_lv1'),
                lv2: util.getClubImg('_lv2'),
                lv3: util.getClubImg('_lv3'),
                lv4: util.getClubImg('_lv4'),
                lv5: util.getClubImg('_lv5'),
            }
        },
    },
    onLoad(e) {
        this.setData({
            clubId: e.clubId
        });
        this.getClubIndex();
    },

    /**
     * 获取俱乐部详情
     */
    getClubIndex() {
        const that = this;
        let param = { data: {} };
        param.data.club_id = this.data.clubId
        clubApi.clubIndex(param, res => {
            if (res.data.status == 1) {
                let club = res.data.club, score = club.score, img = that.data.page.grade;
                club.gradeImg = util.getClubImg(score);
                // club.roleType = 0;
                that.setData({
                    club: club,
                    modifySlogan: that.data.modifySlogan,
                    modifyDescription: that.data.modifyDescription
                })
                App.event.addListener('club', this);
            }
        });
    },

    tips() {
        var that = this;
        if (that.data.club.roleType == 0) {
            let toastParam = {
                title: '提示',
                content: '你还不是俱乐部成员，加入俱乐部即可查看俱乐部资料',
            }
            wxService.showModal(toastParam, res => {
                if (res.confirm) {
                    console.log('用户点击确定')
                    //that.memberGather();
                    let param = { data: {} }, club = this.data.club, that = this,
                        pages = getCurrentPages(), prevPage = pages[pages.length - 2];
                    param.data.club_id = this.data.club.clubID
                    clubApi.clubJoined(param, res => {
                        if (res.data.status == 1) {
                            club.roleType = 1;
                            that.setData({
                                club: club,
                            })

                        }
                    });
                }
            });
        } else {
            that.memberGather();
        }

    },


    //seting club name
    setClubName(e) {
        let data = this.data, param = {};
        param.clubID = data.club.clubID;
        param.title = data.club.title;
        wxService.navigateTo('club/modify/clubName/clubName', param);
    },

    //seting logo
    setClubLogo() {
        const that = this;
        wxService.uploadImg(res => {
            that.setData({
                clubLogo: res[0]
            })
            let param = {
                data: {}
            }
            param.data.club_id = that.data.club.clubID;
            param.data.logo = res[0]
            clubApi.modifyClub(param, res => {
                if (res.data.status == 1) {
                    that.setData({
                        modifyLogo: param.data.logo
                    })
                }
            })
        }, 1);

    },

    //seting grade
    setGrade() {
        wxService.navigateTo('../../../template/common/grade/grade', {
            score: this.data.club.score
        });
    },

    //seting address
    setAddress() {
        const data = this.data;
        wxService.navigateTo('club/modify/province/province', {
            clubID: data.club.clubID
        });
    },

    //主打项目
    setProjects(e) {
        let data = this.data, features = data.modifyFeatures || data.club.features, i = 0, items = [];
        for (; i < features.length; i++) {
            items.push(features[i].name);
        }
        wxService.navigateTo('club/modify/masterProjects/masterProjects', {
            features: items,
            clubID: data.club.clubID
        });
    },

    //设置加入方式
    setJoinWay() {
        const data = this.data;
        let param = {}, needJoinCheck = data.modifyNeedJoinCheck;
        param.clubID = data.club.clubID;
        param.needJoinCheck = needJoinCheck || data.club.needJoinCheck;
        wxService.navigateTo('club/modify/joinWay/joinWay', param);
    },


    //设置收款账号
    setAccountGather() {
        const data = this.data;
        let param = {}, payeeType = data.modifyPayeeType;

        param.clubID = data.club.clubID;
        param.payeeType = payeeType || data.club.payeeType;
        wxService.navigateTo('club/modify/accountGather/accountGather', param);
    },

    //任免副会长
    setViceChariman() {
        //0:haven't viceChariman 2:have viceChariman
        const that = this;
        wxService.navigateTo('club/modify/appointMember/appointMember', {
            type: 0,
            clubID: that.data.club.clubID
        });
    },

    //任免管理员
    setManager() {
        const that = this;
        wxService.navigateTo('club/modify/appointMember/appointMember', {
            type: 1,
            clubID: that.data.club.clubID
        });
    },

    //移除会员
    removeMember() {
        const that = this;
        wxService.navigateTo('club/modify/removeMember/removeMember', {
            clubID: that.data.club.clubID
        });
    },

    showDeclaration() {
        let type = 0;
        if (this.data.showDeclaration != 1) {
            type = 1;
        }
        this.setData({
            showDeclaration: type,
        })
    },

    //宣言
    setDeclaration() {
        const data = this.data;
        let param = {};
        param.clubID = data.club.clubID;
        param.slogan = data.club.slogan;
        wxService.navigateTo('club/modify/declaration/declaration', param);

    },

    showDescription() {
        let type = 0;
        if (this.data.showDescription != 1) {
            type = 1;
        }
        this.setData({
            showDescription: type,
        })
    },

    //设置简介
    setDescription() {
        const data = this.data
        let param = {};
        param.clubID = data.club.clubID;
        param.description = data.club.description;
        wxService.navigateTo('club/modify/description/description', param);
    },

    //memberGather
    memberGather() {
        wxService.navigateTo('club/modify/clubMember/clubMember', {
            clubID: this.data.club.clubID
        });
    },

    deleteClub() {
        const that = this;
        let toastParam = {
            title: '确定删除俱乐部？',
            content: '所有活动、群、俱乐部成员将同时删除，且不能恢复。',
        }
        wxService.showModal(toastParam, res => {
            if (res.confirm) {
                let param = { data: {} }
                param.data.club_id = that.data.club.clubID
                clubApi.clubDeleted(param, res => {
                    if (res.data.status == 1) {
                        wxService.showToast('申请已提交');
                        App.wxService.navigateBack();
                    }
                });
            }
        })
    },

    clubQuited() {
        let param = { data: {} }, club = this.data.club, that = this,
            pages = getCurrentPages(), prevPage = pages[pages.length - 2];
        param.data.club_id = this.data.club.clubID
        clubApi.clubQuited(param, res => {
            if (res.data.status == 1) {
                club.roleType = 0;
                prevPage.setData({
                    club: club
                })
            }

        });
    },

    joinClub() {
        let param = { data: {} }, club = this.data.club, that = this,
            pages = getCurrentPages(), prevPage = pages[pages.length - 2];
        param.data.club_id = this.data.club.clubID
        clubApi.clubJoined(param, res => {
            if (res.data.status == 1) {
                club.roleType = 1;
                that.setData({
                    club: club,
                    joinFlag: true
                })

            }
        });
    },

    reload: function (e) {
        const clubId = e.currentTarget.dataset.clubid;
        this.onLoad({
            clubId: clubId
        })
    },
    onUnload: function () {
        App.event.removeListener('club');

        //查询是否有修改信息
        let club = this.data.club
        let newClub = {}
        if (data.tempTitle) {
            newClub.title = data.tempTitle
        }
        if (data.tempSlogan && club.slogan != data.tempSlogan) {
            newClub.slogan = data.tempSlogan
        }
        if (data.modifyLogo && club.logo != data.modifyLogo) {
            newClub.logo = data.modifyLogo
        }
        if (data.modifyFeatures) {
            newClub.features = data.modifyFeatures
        }
        getApp().event.emit(getApp().config.EVENT_CLUB_MODIFY, newClub)
    }


})