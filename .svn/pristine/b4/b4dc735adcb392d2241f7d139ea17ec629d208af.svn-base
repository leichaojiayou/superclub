var app = getApp()
Page({
  data: {
    maxApplyCountTxt: "",
    maxApplyCount: "",
    tickets: [],
    neeToPay: 1,
    howToPay: 1,
    costDesc: "",
    payee: {},//收款账号
    president: {}//会长账号

  },
  onLoad: function (options) {
    // 页面初始化 options为页面跳转所带来的参数
    console.info("11111111111+++++++++");
   
    var tickets =JSON.parse(options.tickets);
     console.info(options)
    this.setData({
      payee: options.payee,
      president: options.president
    })
    console.info(tickets &&  tickets.length>0)
    if (tickets && tickets.length>0) {//编辑活动
      var maxApplytxt = "";
      if (options.maxApplyCount != -1) {
        maxApplytxt = options.maxApplyCount
      }
      this.setData({
        tickets: JSON.parse(options.tickets),
        neeToPay: options.neeToPay,
        howToPay: options.howToPay,
        costDesc: options.costDesc,
        maxApplyCount: options.maxApplyCount,
        maxApplyCountTxt: maxApplytxt
      })

    } else {
      var tks = [{ "applyCount": 0, "name": "", "cost": "", "ticketID": 0, "memberCount": "" }]
      this.setData({
        tickets: tks,
        neeToPay: 1,
        howToPay: 1
      })

    }

  },
  onReady: function () {
    // 页面渲染完成

  },
  onShow: function () {
    // 页面显示
  },
  onHide: function () {

  },
  onUnload: function () {
    // 页面关闭
    var setSbubChecked = this.getAppSets();
    // 页面隐藏
    var tickes = this.data.tickets;
    var tiks = [];
    for (var i = 0; i < tickes.length; i++) {
      var tik = {}
      tik.name = tickes[i].name
      tik.memberCount = tickes[i].memberCount
      tik.cost = tickes[i].cost
      tiks[i] = tik
    }
    app.globalData.actFeeObject = {
      maxApplyCount: this.data.maxApplyCount,
      tickets_form: tiks,
      tickets: this.data.tickets,
      neeToPay: this.data.neeToPay,
      howToPay: this.data.howToPay,
      costDesc: this.data.costDesc
    };  //存储数据到app对象上
   
  },
  onlinePay: function (e) {
    var actId = this.data.actId;
    if (actId && actId != "") {//编辑活动
      this.setOnlinePay(e);
    } else {//组织活动
      var payee = this.data.payee
      var president = this.data.president
      if (payee && payee != "") {
        this.setOnlinePay(e);
      } else {
        this.setData({
          neeToPay: 1,
          howToPay: 1
        })

        wx.showModal({
          content: "俱乐部未设置支付收款账户，请联系会长在俱乐部管理者设置",
          confirmText: "打电话",
          cancelText: "稍后联系",
          success: function (res) {
            console.info(res)
            wx.showModal({
              content: "确定呼叫：" + president.nick + " " + president.mobile + " ？",
              confirmText: "呼叫",
              cancelText: "取消",
              success: function (res) {
                wx.makePhoneCall({
                  phoneNumber: president.mobile,
                  success: function () {
                    console.log("成功拨打电话")
                  }
                })
              }
            })
          }
        })
      }
    }
  },
  setOnlinePay: function (e) {
    var ifCostZero = this.isCostZero();
    if (ifCostZero) {//免费
      wx.showToast({
        title: "免费活动无需开启"
      })
      this.setData({
        neeToPay: 1,
        howToPay: 1
      })
    } else {
      var flag = e.detail.value;
      if (flag) {//在线支付
        this.setData({
          neeToPay: 2,
          howToPay: 2
        })
      } else {
        this.setData({
          howToPay: 1
        })
      }
    }
    console.info(this.data);
  },
  otherPay: function (e) {
    var ifCostZero = this.isCostZero();
    if (ifCostZero) {//免费
      wx.showToast({
        title: "免费活动无需开启"
      })
      this.setData({
        neeToPay: 1,
        howToPay: 1
      })
    } else {
      var flag = e.detail.value;
      if (flag) {//在线支付
        this.setData({
          howToPay: 3,
        })
      } else {
        this.setData({
          howToPay: 2,
        })
      }
    }
  },
  isCostZero: function () {
    var tickets = this.data.tickets;
    var ifCostZero = true;//是否是免费
    if (tickets.length > 0) {
      for (var i = 0; i < tickets.length; i++) {
        if (tickets[i].cost > 0) {
          ifCostZero = false;
        }
      }
    }
    return ifCostZero;
  },
  getAppSets: function () {
    var ticketChecked = true;
    var tickets = this.data.tickets;
    if (tickets.length == 0) {
      this.setData({
        neeToPay: 1,
        howToPay: 1
      })
    } else {
      for (var i = 0; i < tickets.length; i++) {
        if (!tickets[i].name || tickets[i].name == "") {
          ticketChecked = false;
          wx.showToast({
            title: "费用名称不能为空"
          })
          break;
        } else {
          for (var j = i + 1; j < tickets.length; j++) {
            if (tickets[j].name && tickets[j].name != "") {
              if (tickets[i].name == tickets[j].name) {
                ticketChecked = false;
                wx.showToast({
                  title: "费用名称不能重复"
                })
                break;
              }
            }
            if (!ticketChecked) {
              break;
            }
          }
        }
        if (tickets[i].name && tickets[i].name.length > 20) {
          ticketChecked = false;
          wx.showToast({
            title: "费用名称必须在20字内"
          })
          break;
        }
        if (tickets[i].cost && tickets[i].cost < 0) {
          ticketChecked = false;
          wx.showToast({
            title: "费用金额必须大于或者等于0"
          })
          break;
        }
      }

      if (!this.data.costDesc || this.data.costDesc == "") {
        ticketChecked = false;
        wx.showToast({
          title: "费用说明不能为空"
        })
      }
    }

    return ticketChecked;
  },
  setItemInfo: function (e) {
    var value = e.detail.value;
    var id = e.target.id;
    var name = id.split("_")[0];
    var index = id.split("_")[1];
    var tickets = this.data.tickets;
    if (name == "name") {
      tickets[index].name = value
    } else {
      var num = /[^0-9]\d*$/;
      if (num.test(value)) {//非数字
        wx.showToast({
          title: "只能输入数字"
        })
      } else {
        if (name == "cost") {
          tickets[index].cost = value
        }
        if (name == "memberCount") {
          if (value == "") {//报名人数不限
            tickets[index].memberCount = "-1"
          } else {
            tickets[index].memberCount = value
          }
        }
      }
    }
    
    this.setData({ tickets: tickets })
    console.info("xxxxxxxxxxxxxxxxx")
    console.info(this.data.tickets)
  },
  setMaxApplyCount: function (e) {
    var value = e.detail.value;
    var maxApplyNum = "";
    var maxApplyNumTxt = "";
    if (value && value != "") {
      var num = /[^0-9]\d*$/;
      if (num.test(value)) {//非数字
        wx.showToast({
          title: "只能输入数字"
        })
        maxApplyNum = -1;
        var maxApplyNumTxt = "";
      } else {
        maxApplyNum = value;
        var maxApplyNumTxt = value;
      }
    } else {
      maxApplyNum = -1;
      var maxApplyNumTxt = "";
    }
    this.setData({
      maxApplyCountTxt: maxApplyNumTxt,
      maxApplyCount: maxApplyNum,
    })
    console.info(this.data.maxApplyCount);
  },
  setCostDesc: function (e) {
    var value = e.detail.value;
    this.setData({ costDesc: value });
  },
  removeItem: function (e) {
    var id = e.currentTarget.id;
    var index = id.split("_")[1];
    var tiks = this.data.tickets;
    tiks.splice(index, 1)
    this.setData({ tickets: tiks })


  },
  addItem: function (e) {
    var tksItem = [{ "applyCount": 0, "name": "", "cost": "", "ticketID": 0, "memberCount": "" }]
    var id = e.currentTarget.id;
    var index = id.split("_")[1];
    var tiks = this.data.tickets;
    tiks.splice(tiks.length, 0, tksItem)
    this.setData({ tickets: tiks })
  }


})