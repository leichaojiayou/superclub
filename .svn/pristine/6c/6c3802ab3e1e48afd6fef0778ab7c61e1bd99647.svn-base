//app.js
const __api = require('api/api');

const __service = require('utils/wxService');
const __session = require('utils/session');
const __utils = require('utils/util')
const __config = require('utils/constant');

App({
  onLaunch: function () {
    //调用API从本地缓存中获取数据
    var logs = wx.getStorageSync('logs') || []
    logs.unshift(Date.now())
    wx.setStorageSync('logs', logs)
    this.getUserInfo();
  },
  getUserInfo: function (cb) {
    var that = this
    if (this.globalData.userInfo) {
      typeof cb == "function" && cb(this.globalData.userInfo)
    } else {
      //调用登录接口
      let loginParam = new Object();
      wx.login({
        success: function (res) {
          loginParam.code = res.code;
          wx.getUserInfo({
            success: function (res) {
              that.globalData.userInfo = res.userInfo
              typeof cb == "function" && cb(that.globalData.userInfo)
              //set userInfo
              loginParam.encryptedData = res.encryptedData;
              loginParam.iv = res.iv;
              that.globalData.loginParam = loginParam
              that.getLoginParam(loginParam, that.session);
            }
          })
        }
      })
    }
  },
  getLoginParam: (param, obj) => {
    wx.request({
      url: __config.LOGIN_URL,
      data: param,
      success: (res) => {
        if (res.statusCode == 200) {
          let data = res.data;
          if (data.status != 0) {
            obj.saveUserInfo(data.user, data._key)
          } else {
            obj.setCode(data.code, data.status)
          }
        }
      }
    });
  },
  globalData: {
    userInfo: null,
    temp:{}
  },
  //==============
  /**
   * 调用api 新方法
   * @param name
   *    eg:
   *      const actApi = getApp().actApi().api('actApi');
   *      actApi.getActApplyList('url',res=>{},res=>{},res=>{})
   */
  api(name){ return __api.factory(name)},

  wxService: new __service,
  session: new __session,
  util: __utils,
})