const utils = require("../utils/util");
const config = require('../utils/constant');

const wxRequest = (param, path, ...fn) => {
    const session = getApp().session;
    //show loading dialog
    wx.showToast({
        title: "加载中...",
        icon: "loading"
    })
    let url = config.BASE_URL + path + '?platform=3&sys_version=2.1&api_version=15&_key=' + session.getUserKey()

    //设置fail callback 
    const failAction = res => {
        typeof fn[1] === 'function' && fn[1](res);
        if (param.failToast) {//如果定制了toast内容，就弹出toast（setTimeout toast）
            wx.showToast(param.failToast)
        } else {//否则隐藏toast
            wx.hideToast();
        }
    }

    let requestParam = new Object();
    if (param) {
        requestParam.url = url;
        // OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, CONNECT
        requestParam.method = param.method || 'GET';
        // 设置请求的 header
        requestParam.header = {
            'Content-Type': 'application/json'
        };
        requestParam.data = param.data || {}
    }else{
        console.debug('that param is null')
        return 
    }

    //设置success callback
    if (fn[0]) {
        requestParam.success = res => {
            if (res.statusCode >= 200 && res.statusCode < 300) {
                if (res.data.status == 1) {//请求成功
                    typeof fn[0] === 'function' && fn[0](res);
                    if (param.successToast) {//如果定制了toast内容，就弹出吐丝（定时吐丝）
                        wx.showToast(param.successToast)
                    } else {//否则隐藏兔兔
                        wx.hideToast();
                    }
                } else {
                    failAction(res)
                }
            } else {
                failAction(res)
            }
        }
    } else {
        console.debug('Don\'t have success callback');
        return
    }

    //设置fail callback
    if (fn[1]) {
        requestParam.fail = res => {
            failAction(res)
        }
    } else {
        console.debug('Don\'t have fail callback');
    }

    //seting complete callback
    if (fn[2]) {
        requestParam.complete = res => {
            typeof fn[2] === 'function' && fn[2](res)
        }
    } else {
        console.debug('Don\'t have complete callback');
    }
    wx.request(requestParam)
}



module.exports = {
    wxRequest
} 