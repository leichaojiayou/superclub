const App = getApp();
const clubApi = App.api('clubApi');
const wxService = App.wxService;
const config = require('../../../utils/constant')
Page({
    data: {
        page: {
            club_logo_img: config.CDN_URL + '/xiaochengxu/image/club_logo.jpg',
            club_statistics_icon: config.CDN_URL + '/xiaochengxu/image/member.png',
            img: config.CDN_URL + '/xiaochengxu/image/right-errow.png',
            grade: {
                lv0: config.CDN_URL + '/xiaochengxu/image/stars.png',
                lv1: config.CDN_URL + '/xiaochengxu/image/clubstar/lv1@2x.png',
                lv2: config.CDN_URL + '/xiaochengxu/image/clubstar/lv2@2x.png',
                lv3: config.CDN_URL + '/xiaochengxu/image/clubstar/lv3@2x.png',
                lv4: config.CDN_URL + '/xiaochengxu/image/clubstar/lv4@2x.png',
                lv5: config.CDN_URL + '/xiaochengxu/image/clubstar/lv5@2x.png',
            }
        },
    },
    onLoad(e) {
        this.setData({
            clubId: e.clubId
        });
        this.getClubIndex();
    },

    /**
     * 获取俱乐部详情
     */
    getClubIndex() {
        const that = this;
        let param = {data:{}};
        param.data.club_id = this.data.clubId
        clubApi.clubIndex(param, res => {
            if (res.data.status == 1) {
                let club = res.data.club, score = club.score, img = that.data.page.grade;
                if (score < 200) {
                    club.gradeImg = img.lv0
                } else if (score < 600) {
                    club.gradeImg = img.lv1
                } else if (score < 2000) {
                    club.gradeImg = img.lv2
                } else if (score < 5000) {
                    club.gradeImg = img.lv3
                } else if (score < 10000) {
                    club.gradeImg = img.lv4
                } else {
                    club.gradeImg = img.lv5
                }
                that.setData({
                    club: res.data.club
                })
            }
        });
    },

    tips() {
        var that = this;
        if (that.data.club.roleType == 0) {
            let toastParam = {
                title: '提示',
                content: '你还不是俱乐部成员，加入俱乐部即可查看俱乐部资料',
            }
            wxService.showModal(toastParam, res => {
                if (res.confirm) {
                    console.log('用户点击确定')
                    that.memberGather();
                }
            });
        } else {
            that.memberGather();
        }

    },


    //seting club name
    setClubName(e) {
        let data = this.data, param = {}, title = data.modifyTitle;
        param.clubID = data.club.clubID;
        param.title = title || data.club.title;
        wxService.navigateTo('club/modify/clubName/clubName', param);
    },

    //seting logo
    setClubLogo() {
        const that = this;
        wxService.uploadImg(res => {
            that.setData({
                clubLogo: res[0]
            })
            let param = {
                data: {}
            }
            param.data.club_id = that.data.club.clubID;
            param.data.logo = res[0]
            clubApi.modifyClub(param, res => {
                if (res.data.status == 1) {
                    let pages = getCurrentPages(), prevPage = pages[pages.length - 2];
                    prevPage.setData({
                        modifyLogo: param.data.logo
                    })
                }
            })
        }, 1);

    },

    //seting grade
    setGrade() {
        console.log('test')
    },

    //seting address
    setAddress() {
        const data = this.data;
        wxService.navigateTo('club/modify/province/province', {
            clubID: data.club.clubID
        });
    },

    //主打项目
    setProjects(e) {
        let data = this.data, features = data.modifyFeatures || data.club.features, i = 0, items = [];
        for (; i < features.length; i++) {
            items.push(features[i].name);
        }
        wxService.navigateTo('club/modify/masterProjects/masterProjects', {
            features: items,
            clubID: data.club.clubID
        });
    },

    //设置加入方式
    setJoinWay() {
        const data = this.data;
        let param = {}, needJoinCheck = data.modifyNeedJoinCheck;
        param.clubID = data.club.clubID;
        param.needJoinCheck = needJoinCheck || data.club.needJoinCheck;
        wxService.navigateTo('club/modify/joinWay/joinWay', param);
    },


    //设置收款账号
    setAccountGather() {
        const data = this.data;
        let param = {}, payeeType = data.modifyPayeeType;

        param.clubID = data.club.clubID;
        param.payeeType = payeeType || data.club.payeeType;
        wxService.navigateTo('club/modify/accountGather/accountGather', param);
    },

    //任免副会长
    setViceChariman() {
        //0:haven't viceChariman 2:have viceChariman
        const that = this;
        wxService.navigateTo('club/modify/appointMember/appointMember', {
            type: 0,
            clubID: that.data.club.clubID
        });
    },

    //任免管理员
    setManager() {
        const that = this;
        wxService.navigateTo('club/modify/appointMember/appointMember', {
            type: 1,
            clubID: that.data.club.clubID
        });
    },

    //移除会员
    removeMember() {
        const that = this;
        wxService.navigateTo('club/modify/removeMember/removeMember', {
            clubID: that.data.club.clubID
        });
    },

    //宣言
    setDeclaration() {
        const data = this.data, slogan = data.modifySlogan;
        let param = {};
        param.clubID = data.club.clubID;
        param.slogan = slogan || data.club.slogan;
        wxService.navigateTo('club/modify/declaration/declaration', param);

    },

    //设置简介
    setDescription() {
        const data = this.data, description = data.modifyDescription;
        let param = {};
        param.clubID = data.club.clubID;
        param.description = description || data.club.description;
        wxService.navigateTo('club/modify/description/description', param);
    },

    //memberGather
    memberGather() {
        wxService.navigateTo('club/modify/clubMember/clubMember', {
            clubID: this.data.club.clubID
        });
    },

    deleteClub() {
        let toastParam = {
            title: '确定删除俱乐部？',
            content: '所有活动、群、俱乐部成员将同时删除，且不能恢复。',
        }
        wxService.showModal(toastParam, res => {
            if (res.confirm) {
                let param = {}
                let data = {
                    club_id: 100401
                }
                param.data = data;
                clubApi.clubDeleted(param, res => { }, res => { }, res => {
                    if (res.statusCode === 200) {
                        let resultObj = res.data;
                        if (resultObj.status == 1) {
                            App.wxService.navigateBack();
                        }
                    }
                });
            }
        })
    },

    clubQuited() {
        let param = {}
        clubApi.clubIndex(param, res => {
            console.log(res);
        });
    },

    joinClub() {
        let param = {}
        clubApi.clubJoined(param, res => {
            console.log(res);
        });
    },

    onShow: function () {
        const temp = this.data;
        this.setData({
            modifyTitle: temp.tempTitle,
            modifyFeatures: temp.tempFeatures,
            modifyNeedJoinCheck: temp.tempNeedJoinCheck,
            modifyAddress: temp.tempAddress,
            modifyPayeeType: temp.tempPayeetype,
            modifySlogan: temp.tempSlogan,
            modifyDescription: temp.tempDescription,

        })
    },
    onUnload: function () {
        let pages = getCurrentPages(), prevPage = pages[pages.length - 2], data = this.data;
        prevPage.setData({
            modifyTitle: data.tempTitle || data.club.title,
            modifyFeatures: data.tempFeatures || data.club.features,
            modifySlogan: data.tempSlogan || data.club.slogan,
        })
    }

})