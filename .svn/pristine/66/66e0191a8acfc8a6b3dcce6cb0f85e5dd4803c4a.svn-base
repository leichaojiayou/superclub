var app = getApp()
const utils = app.util;
import storage from '../../../utils/storage.js'
var organizeApi = app.api("organizeApi");
const date = new Date()
const years = []
const months = []
const hours = []
const minutes = []
const day28 = []
const day29 = []
const day30 = []
const day31 = []

for (let i = 1990; i <= date.getFullYear(); i++) {
  years.push(i)
}

for (let i = 1; i <= 12; i++) {
  months.push(i)
}

for (let i = 1; i <= 28; i++) {
  day28.push(i)
}

for (let i = 1; i <= 29; i++) {
  day29.push(i)
}
for (let i = 1; i <= 30; i++) {
  day30.push(i)
}
for (let i = 1; i <= 31; i++) {
  day31.push(i)
}
for (let i = 0; i <= 23; i++) {
  hours.push(i)
}
for (let i = 0; i <= 59; i++) {
  minutes.push(i)
}

Page({
  data: {
    point_color: '0,0,0',
    color: [
      '255,58,58',
      '255,174,58',
      '255,222,0',
      '125,204,77',
      '54,170,251',
      '201,115,255',
      '0,0,0',
    ],
    contents: [],
    // back: 's',
    applyFields: [
      { isCheck: true, canEidt: false, text: '昵称', option: "", defaultValue: "请填写昵称", fieldName: "昵称", fieldType: 1 },
      { isCheck: true, canEidt: false, text: '手机', option: "", defaultValue: "请填写手机", fieldName: "手机", fieldType: 1 },
      { isCheck: true, canEidt: false, text: '性别', option: "男，女", defaultValue: "男", fieldName: "性别", fieldType: 2 },
      { isCheck: false, canEidt: true, text: '真实姓名', option: "", defaultValue: "", fieldName: "真实姓名", fieldType: 1 },
      { isCheck: false, canEidt: true, text: '身份证', option: "", defaultValue: "", fieldName: "身份证", fieldType: 1 }
    ],
    pos: 0,
    input_auto: false,
    font_color: '0,0,0',
    font_size: false,
    isWeight: false,
    istap: false,
    test: 's',
    can: '000',
    isShowColor: true,

    //日期控件
    years: years,
    year: date.getFullYear(),
    months: months,
    days: day31,
    month: date.getMonth() + 1,
    day: date.getDate(),
    hours: hours,
    hour: date.getHours(),
    minutes: minutes,
    minute: '00',
    value: [date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes()],
    starttime: '开始时间',
    modalShowStyle: '',


    actInfo: {},
    actId: '',
    title: "",	//	活动主题（标题）
    content: "",	//	活动内容
    max_apply_count: 0,	//	活动最多报名人数, 如果不限制传入-1
    deadline: 0,	//	报名截止时间（毫秒时间戳）
    begin: 0,	//	活动开始时间（毫秒时间戳）
    end: 0,	//	活动截止时间（毫秒时间戳）
    lat: 0,	//	经度
    lng: 0,	//	纬度
    address: "0",	//	活动地址
    apply_check: 0,	//	是否开启报名审核 1:是 0:否 默认: 0
    fields: "0",	//	非必需字段
    cost: 0,	//	如果是免费就传0 收费就传具体的数字 默认: 免费
    cost_desc: "",	//	活动费用描述
    guide: "",	//	报名须知
    auto_create_group: 0,	//	是否自动创建群 1:创建 0:不创建 默认: 0
    cover: "",	//	显示指定封面 未指定时提取活动内容第一张图
    act_type: 1,	//	活动类型（1：俱乐部公开活动 2：俱乐部内部活动 3：私人活动）
    helper_apply: 1,	//	是否开启帮人报名功能 1:是 2:否 默认: 1
    user_lat: 0,	//	发布活动时，用户所在的纬度, 需要增大一百万倍再传过来
    user_lng: 0,	//	发布活动时，用户所在的经度, 需要增大一百万倍再传过来
    user_location: "",	//	发布活动时，用户所在的一级城市
    act_location: "",	//	活动地址（发布活动时，标记的活动位置，即参数address）所在一级城市
    act_type: 1,	//	活动类型（1：俱乐部公开活动 2：俱乐部内部活动 3：私人活动）
    need_to_pay: 1,	//	是否是收费活动（1：不收费 2：收费）默认 1: 不收费
    how_to_pay: 1,	//	付费方式（1：无(包括该版本前的非在线收费活动) 2：在线付费）默认：1:无
    payee_account: 1,	//	收款账户ID（即收款人用户ID，tips：不是会员号）
    cancel_apply: 1,	//	是否可以取消报名，1是可以，0是不可以
    begin_sms_time: 3600,//活动开始前短信提醒时间，默认24小时前，单位：秒， 如活动开始一小时前提醒，begin_sms_time=3600. 不发送短信传-1
    // begin_sms_msg	:	"您报名的活动（xxxxxxx）将于1月26日18时49分开始，打开超级俱乐部APP查看详情，或点击 s.iweju.com 下载	",	//	活动开始前的短信内容
    data_type: 0,//	数据类型，0是发布正式活动(默认)，1是保存为草稿
    image: "",
    beginSmsTimes:[],
    cover_img: "",
    haveApplyNum: 0, //已报名人数
    actFeeText: "免费"//费用说明
  },
  position: -1,
  input_content: '',
  onLoad: function (e) {
    var that = this;
    storage.saveSync("key", "31a7f654b77486ce000083e1905b7ef7")
 console.log(this.position)
    setInterval(this.setCan, 500);
    //var actId = e.actId;
    var actId = '591725';
    if (actId && actId != '') {//编辑活动
      var param = {}
      var data = {}
      param.method = "GET";
      param.activity_id = actId;
      param.load_model = 0;

      organizeApi.getActDetail({
        data: param
      },
        function (res) {
          console.info("===========");
          console.info(res.data.activity);
          var actInfo = res.data.activity;
          that.setData({ actInfo: actInfo });
          //初始化标题
          that.initTitle(actInfo);
          //初始化内容
          that.initContent(actInfo);
          //初始化自定义填写项
          that.initApplyItem(actInfo);
          //初始化报名人数 时间 地址
          that.initOther(actInfo);

          //初始化活动费用说明 金额 费用说明
          that.initPrice(actInfo);
          //this.initIszxPay(actInfo);        
          //初始化费用
          that.initFee(actInfo);
          //初始化分组
          that.initGroup(actInfo);
          that.setData({beginSmsTimes:actInfo.beginSmsTimes})
         
          //初始化发送短信
          that.initSmsTime(actInfo);

          //初始化更多设置
          that.initSetMore(actInfo);

        },
        function (errInfo) {
          let errorMsg = utils.getErrorMsg(errInfo);
          wx.showModal({ title: '报名列表加载失败', content: errorMsg.title + '；' + errorMsg.content })
        }, function (res) {
          console.log(res)
        })
    } else {//组织活动

    }
  },
  onShow: function (e) {
    var cover_img = app.globalData.modelImgSrc //封面
    var actFeeObject = app.globalData.actFeeObject //活动费用
    var applyFieldsObject = app.globalData.applyFieldsObject //用户报名项
    var actType = app.globalData.actType //活动类型
    var smsTips = app.globalData.smsTips //短信提醒
    if (cover_img && cover_img != "") {//从封面获取图片
      this.setData({ cover: cover_img });
    }
    if (actFeeObject && actFeeObject != "") {

    }
    if (actType && actType != "") {
      this.setData({ cover: cover_img });
    }
    if (smsTips && smsTips != "") {
      this.setData({ cover: cover_img });
    }
  },
  initTitle: function (actInfo) {
    this.setData({ title: actInfo.title })
  },
  initContent: function (actInfo) {

  },

  initApplyItem: function (actInfo) {
    var actForms = actInfo.applyFields;
    if (actForms.length > 0) {
      var actForm = new Array();
      for (var i = 0; i < actForms.length; i++) {
        var fieldName = {}
        fieldName = {
          isCheck: true,
          text: actForms[i].fieldName,
          canEidt: (actForms[i].fieldName == "昵称" || actForms[i].fieldName == "性别" || actForms[i].fieldName == "手机") ? false : true,
          option: actForms[i].option,
          defaultValue: actForms[i].defaultValue,
          fieldName: actForms[i].fieldName,
          fieldType: actForms[i].fieldType
        };
        actForm[i] = fieldName;
      }
      console.info("xxxxxxxxxxxxxxxxxxxx");
      console.info(this.data.applyFields);
      this.setData({ applyFields: actForm });
      console.info(this.data.applyFields);

    }
  },
  initOther: function (actInfo) {

    //报名人数
    // if(actInfo.apllyNum == -1){//不限

    // }else{

    // }

    //活动时间
    if (actInfo.begin) {
      var beginTime = this.formatTime(new Date(actInfo.begin));
      this.setData({ begin: beginTime })

    }
    if (actInfo.end) {
      var endTime = this.formatTime(new Date(actInfo.end));
      this.setData({ end: endTime })
    }
    if (actInfo.deadline) {
      this.setData({ deadline: this.formatTime(new Date(actInfo.deadline)) })
    }

    //活动地址
    if (actInfo.address) {
      this.setData({
        address: actInfo.address,
        lat: actInfo.lat,
        lng: actInfo.lng
      })
    } else {
      this.setData({ address: "标记活动位置，可不标" })
    }

  },
  initPrice: function (actInfo) {
    this.setData({ haveApplyNum: actInfo.haveApplyNum })

    var flag = false;
    if (actInfo.needToPay == 2) {
      this.setData({
        actFeeText: "付费",
        need_to_pay: 2,		//	是否是收费活动（1：不收费 2：收费）默认 1: 不收费
        cost_desc: actInfo.costDesc
      })
      if (actInfo.apllyNum == -1) {
        this.setData({ max_apply_count: "-1" })
      } else {
        this.setData({ max_apply_count: actInfo.apllyNum })
      }
    } else {
      this.setData({ actFeeText: "免费" })
      if (actInfo.apllyNum == -1) {
      } else {
        this.setData({
          max_apply_count: actInfo.apllyNum,
          need_to_pay: 1
        })
      }
    }
  },
  initIszxPay: function (actInfo) {
    var q = 1;
    if (actInfo.howToPay == 2) {
      _actop._showZOn(q);
    } else {
      _actop._showZOff(q);
    }
  },
  initFee: function (actInfo) {
    if (actInfo.needToPay == 2) {
      //needToPay 
      _actop._needPay = actInfo.needToPay;
      _actop._howToPay = actInfo.howToPay;
      _actop._initfeeItems(actInfo);
      $('.showfee').show();
      $('.showunfee').hide();
      $('#feeDetail').show();
      $('#unfeeDetail').hide();
      var q = 1;
      if (actInfo.howToPay == 2 || actInfo.howToPay == 3) {
        _actop._showZOn(q);
        if (actInfo.howToPay == 3) {
          _actop._showOtherOn();
        }
      } else {
        _actop._showZOff(q);
      }
      _actop._setSubmit();
    }
  },
  initGroup: function (actInfo) {
    if (actInfo.isGroupApply == 1) {//分组
      _actop._showGroupOn();

      if (actInfo.groupNum == -1) {
        $('#groupNum').val('');//默认不限
      } else {
        $('#groupNum').val(actInfo.groupNum);
      }
      if (actInfo.groupMinMemberCount == -1) {
        $('#groupminNum').val('');//默认不限
      } else {
        $('#groupminNum').val(actInfo.groupMinMemberCount);
      }
      if (actInfo.groupMaxMemberCount == -1) {
        $('#groupmaxNum').val('');//默认不限
      } else {
        $('#groupmaxNum').val(actInfo.groupMaxMemberCount);
      }

      /*	$('#groupNum').val(actInfo.groupNum);
        $('#groupminNum').val(actInfo.groupMinMemberCount);
        $('#groupmaxNum').val(actInfo.groupMaxMemberCount);*/

      if (_actop._actDetail != null && _actop._actDetail.haveApplyGroupNum > 0) {
        $('#groupminNum').attr('readonly', 'readonly');
        $('#groupmaxNum').attr('readonly', 'readonly');
      }
    } else {
      _actop._showGroupOff();
    }
  },
  initSmsTime: function (actInfo) {
    var time = actInfo.beginSmsTimeValue;
    _actop._smsTime = time;
    var hour = -1;
    if (time == -1) {
      $('#messageName').html('不发送');
      _actop._messageTime(hour);
    } else {
      hour = time / 3600;
      $('#messageName').html('活动开始前' + hour + '小时');
      _actop._messageTime(hour);
    }
    var smsMsg = actInfo.beginSmsMsg;
    $('#smsMsg').text(smsMsg);

    //设置是否允许取消报名
    //		var isQxApply = actInfo.cancelApply;
    //		if(isQxApply==0){
    //			_actop._showQOn();
    //		}else{
    //			_actop._showQOff();
    //		}
  },
  initSetMore: function (actInfo) {
    if (this.data.cover_img != "") {
      this.setData({ cover: this.data.cover_img })
    } else {
      this.setData({ cover: actInfo.cover })
    }
    // $('.dot').hide();
    // if(actInfo.actType == 3){
    // 	_actop._actType = 3;
    // 	$('#typeName').html('私人活动');
    // 	$('.showOneOn').show();
    // 	$('.showClubOn').hide();
    // 	$('.showOpenOn').hide();
    // }else if(actInfo.actType == 2){
    // 	_actop._actType = 2;
    // 	$('#typeName').html('俱乐部内活动');
    // 	$('.showOneOn').hide();
    // 	$('.showClubOn').show();
    // 	$('.showOpenOn').hide();
    // }else if(actInfo.actType == 1){
    // 	_actop._actType = 1;
    // 	$('#typeName').html('公开活动');
    // 	$('.showOneOn').hide();
    // 	$('.showClubOn').hide();
    // 	$('.showOpenOn').show();
    // }
    // if(actInfo.cover != "" && actInfo.cover != null){
    // 	$('#coverShow').html('<img class="actCover" src="'+actInfo.cover+'" height="30px" width="30px"  /> <img class="more" src="../img/arrow (2).png" height="14px" /> ')

    /*$(".actCover").attr("src",);//设置封面*/
    // }
    //不需要审核
    // if(actInfo.applyCheck == 0){
    // 	$('.son').hide();
    // 	$('.soff').show();
    // 	_actop._ischeck = 0;
    // }else{//需要审核
    // 	$('.soff').hide();
    // 	$('.son').show();
    // 	_actop._ischeck = 1;
    // }

    // //帮报开关
    // if(actInfo.helperApply == 1){
    // 	$('.yoff').hide();
    // 	$('.yon').show();
    // 	_actop._isHelp_apply = 1;
    // }else{//2不允许帮报
    // 	$('.yon').hide();
    // 	$('.yoff').show();
    // 	_actop._isHelp_apply = 2;
    // }



    // if(actInfo.autoCreateGroup == 1){
    // 	$('.off').hide();
    // 	$('.on').show();
    // 	_actop._idAuto = true;
    // }else{
    // 	$('.on').hide();
    // 	$('.off').show();
    // 	_actop._idAuto = false;
    // }
    // if(actInfo.applyCheck == 1){
    // 	$('.soff').hide();
    // 	$('.son').show();
    // }else{
    // 	$('.son').hide();
    // 	$('.soff').show();
    // }
    // $('.enrollNotice').text(actInfo.guide);
  },
  initTime: function () {
    var nextTime2 = new Date((new Date().getTime()) + (86400000 * 7));
    var yy2 = nextTime2.getFullYear()
    var mm2 = (nextTime2.getMonth() + 1 < 10) ? ('0' + (nextTime2.getMonth() + 1)) : (nextTime2.getMonth() + 1);
    var dd2 = (nextTime2.getDate() < 10 ? ('0' + nextTime2.getDate()) : nextTime2.getDate());
    $('#post_begintime').val(yy2 + '-' + mm2 + '-' + dd2 + ' 09:00');
    $('#post_endtime').val(yy2 + '-' + mm2 + '-' + dd2 + ' 18:00');
    /*$('#post_deadlinetime').val(yy2+'-'+mm2+'-'+dd2+' 09:00');*/
    $("#refundTime").val(yy2 + '-' + mm2 + '-' + dd2 + ' 09:00');
    //报名截止时间判断
    _actop._deadlinetime = yy2 + '-' + mm2 + '-' + dd2 + ' 09:00';
  },
  addActAddress: function () {
    var that = this;
    wx.showActionSheet({
      itemList: ['标记线下活动地点', '线上活动'],
      success: function (e) {
        var index = e.tapIndex;
        if (index == 0) {
          that.chooseLocation();
        } else if (index == 1) {
          that.setData({ address: "线上活动" });
        }
      }
    })
  },
  chooseLocation: function () {
    var longitude = this.data.lng / 1000000;
    var latitude = this.data.lat / 1000000;
    //  wx.openLocation({
    //   longitude: Number(longitude),
    //   latitude: Number(longitude),
    //   name: "",
    //   address: this.data.address
    // })
    var that = this
    wx.chooseLocation({
      success: function (res) {
        console.log(res)
        that.setData({
          lat: res.latitude * 1000000,
          lng: res.longitude * 1000000,
          address: res.address
        })
      }
    })

  },

  formatTime: function (date) {
    var year = date.getFullYear()
    var month = date.getMonth() + 1
    var day = date.getDate()

    var hour = date.getHours()
    var minute = date.getMinutes()
    var second = date.getSeconds()
    var datemap = [year, month, day].map(this.formatNumber);
    return datemap[0] + '年' + datemap[1] + '月' + datemap[2] + '日' + ' ' + [hour, minute].map(this.formatNumber).join(':')
  },
  formatNumber: function (n) {
    n = n.toString()
    return n[1] ? n : '0' + n
  },
  changeActCover: function () {
    var that = this;
    wx.showActionSheet({
      itemList: ['拍照', '从手机相册选择', '从模板库选择'],
      success: function (e) {
        var index = e.tapIndex;
        if (index == 0) {
          that.cameraimg();
        } else if (index == 1) {
          that.albumimg();
        } else {
          that.modelimg();
        }
      }
    })
  },
  cameraimg: function (e) {
    var that = this
    wx.chooseImage({
      count: 9, // 默认9
      sizeType: ['original', 'compressed'], // 可以指定是原图还是压缩图，默认二者都有
      sourceType: ['camera'], // 可以指定来源是相册还是相机，默认二者都有
      success: function (res) {
        // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片
        var tempFilePaths = res.tempFilePaths
        that.setData({
          cover: tempFilePaths[0]
        })
      }
    })
  },
  albumimg: function (e) {
    var that = this
    wx.chooseImage({
      count: 9, // 默认9
      sizeType: ['original', 'compressed'], // 可以指定是原图还是压缩图，默认二者都有
      sourceType: ['album'], // 可以指定来源是相册还是相机，默认二者都有
      success: function (res) {
        // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片
        var tempFilePaths = res.tempFilePaths
        // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片
        var tempFilePaths = res.tempFilePaths
        that.setData({
          cover: tempFilePaths[0]
        })
      }
    })
  },
  modelimg: function () {
    app.wxService.navigateTo('organize/act_cover/act_cover', { id: 2 }, res => {
      console.info(res)
    })
  },
  addApplyFields: function (e) {
    app.wxService.navigateTo('organize/act_applyfields/act_applyfields', { isEidt: false })
  },
  editApplyFields: function (event) {
    var fieldIndex = event.currentTarget.id
    var fieldNames = this.getApplyFieldNames()
    var that = this;
    wx.showActionSheet({
      itemList: ['编辑', '删除'],
      success: function (e) {
        var index = e.tapIndex;
        if (index == 0) {
          app.wxService.navigateTo('organize/act_applyfields/act_applyfields',
            {
              isEidt: true,
              applyField: JSON.stringify(that.data.applyFields[fieldIndex]),
            fieldNames:JSON.stringify(fieldNames)
          })
        } else if (index == 1) {
          var applyFields = that.data.applyFields
          applyFields.splice(fieldIndex, 1)
          that.setData({ applyFields: applyFields })
        }
      }
    })
  },
  getApplyFieldNames: function () {
    var fieldNames = new Array();
    for (var i=0;i< this.data.applyFields.length;i++) {
      fieldNames.push(this.data.applyFields[i].fieldName)
    }
    console.info(fieldNames)
    return fieldNames;
  },

  setActFee: function () {
    app.wxService.navigateTo('organize/act_fee/act_fee', {
      actId: '11',
      tickets: JSON.stringify(this.data.actInfo.tickets),
      neeToPay: this.data.actInfo.needToPay,
      howToPay: this.data.actInfo.howToPay,
      maxApplyCount: this.data.actInfo.maxApplyCount,
      costDesc: this.data.actInfo.costDesc
    })
  },
  setActType: function () {
    app.wxService.navigateTo('organize/act_type/act_type', { actType: this.data.act_type })
  },
  setActSMSTips: function () {
    app.wxService.navigateTo('organize/act_smstips/act_smstips', {
      beginSmsTimes: JSON.stringify(this.data.beginSmsTimes),
      beginSmsTime:this.data.begin_sms_time
      }, res => {
      console.info(res)
    })
  },
  choseApplyFields: function (e) {
    console.log(e.target.id)
    var applyFields = this.data.applyFields
    applyFields[e.target.id].isCheck = !applyFields[e.target.id].isCheck
    this.setData({
      applyFields: applyFields
    })

  },
 uploadImg: function (e) {
    var that = this
    wx.chooseImage({
      count: 9, // 默认9
      sizeType: ['original', 'compressed'], // 可以指定是原图还是压缩图，默认二者都有
      sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有
      success: function (res) {
        // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片
        var tempFilePaths = res.tempFilePaths
        console.log(tempFilePaths)
        var n_con = that.data.contents
        if (that.data.istap == true) {
          for (var i in tempFilePaths) {
            var a = { type: 'img', text: tempFilePaths[i] + '' }
            n_con.splice(that.data.pos, 0, a)
          }
        } else {
          for (var i in tempFilePaths) {
            var a = { type: 'img', text: tempFilePaths[i] + '' }
            n_con.push(a)
          }
        }

        that.setData({
          contents: n_con
        })
      }
    })
  },
  con_tap: function (e) {

    var that = this
    var pos = e.target.id
    var n_con = this.data.contents
    for (var i in n_con) {
      if (n_con[i].type == 'can') {
        n_con.splice(i, 1)
        if (i <= e.target.id) {
          pos--
        }
      }
    }
    n_con.splice(pos, 0, { type: 'can' })
    this.setData({
      contents: n_con,
      pos: pos,
      input_auto: true,
      position: -1,
      istap: true
    })
    setTimeout(function () {
      that.setData({
        input_auto: true
      })
    }, 50)
    // console.log(n_con)
  },
  con_input: function (e) {
    var that = this
    var weizhi
    if (this.data.istap == true) {
      weizhi = check() + 1
    } else {
      weizhi = this.data.contents.length
    }

    var n_con = this.data.contents
    if (this.position == -1) {
      this.position = check() + 1
    }
    if (e.detail.value == '') {
      if (n_con.length > 1) {
        n_con.splice(weizhi - 1, 1)
      }
      that.setData({
        contents: n_con,
        back: 's',
      })
    } else {
      for (var i = 0; i < e.detail.value.length - 1; i++) {
        // e.detail.value.substr(1 + i, 1)
        if (e.detail.value.substr(1 + i, 1) == ' ') {
          n_con.splice(weizhi, 0, { type: 'kongge', text: "kongge" })
        } else if (e.detail.value.substr(1 + i, 1) == '\n' || e.detail.value.substr(1 + i, 1) == '\r\n') {
          n_con.splice(weizhi, 0, { type: 'huiche', text: "huiche" })
        }
        n_con.splice(weizhi, 0, { type: 'text', text: e.detail.value.substr(1 + i, 1), color: that.data.font_color, weight: that.data.isWeight ,font_size: that.data.font_size})
        that.position++
      }
      that.setData({
        contents: n_con
      })
    }
    that.setData({
      test: 's'
    })

    function del(callback) {
      if (n_con.length > 1) {
        n_con.splice(weizhi, 1)
      }
      that.setData({
        contents: n_con,
        back: 's',
      })
      callback()
    }

    function check() {
      for (var i in that.data.contents) {
        if (that.data.contents[i].type == 'can') {
          return i - 1
        }
      }
    }
  }
  ,
  set_input: function (e) {
    var that = this
    var n_con = this.data.contents
    for (var i in n_con) {
      if (n_con[i].type == 'can') {
        n_con.splice(i, 1)
      }
    }
    this.setData({
      contents: n_con,
    })
    this.position = n_con.length
    setTimeout(function () {
      n_con.push({ type: 'can' })
      that.setData({
        contents: n_con,
        pos: n_con.length,
        input_auto: true,
        position: -1,
        istap: true
      })
    }, 100)
  },
  reset_pos: function (e) {
    this.position = -1
    // this.hi()
  },
  choose_weight: function (e) {
    this.setData({
      isWeight: !this.data.isWeight
    })
  },
  test: function (e) {
    this.setData({
      test: 'sss'
    })
  },
  setCan: function (e) {
    if (this.data.can == 'fff') {
      this.setData({
        can: '000'
      })
    } else {
      this.setData({
        can: 'fff'
      })
    }

  }, choose_color: function (e) {
    // 颜色选择
    this.setData({
      point_color: this.data.color[e.target.id],
      font_color: this.data.color[e.target.id]
    })

    if (this.data.isChange) {
      var n_con = this.data.contents
      n_con[this.data.pos].color = this.data.color[e.target.id]
      this.setData({
        contents: n_con,
      })
    }

  }, // 显示与隐藏 颜色选择
  show_color: function (e) {

    var that = this
    var n_con = this.data.contents
    for (var i in n_con) {
      if (n_con[i].type == 'can') {
        n_con.splice(i, 1)
      }
    }
    this.setData({
      contents: n_con,
      isShowColor: !this.data.isShowColor
    })
  }
  ,// 图片删除
  delete: function (e) {
    var that = this
    var n_con = this.data.contents

    n_con.splice(e.target.id, 1)
    that.setData({
      contents: n_con
    })


  },
  user_choose: function (e) {
    var user_choose_list = this.data.user_choose_list
    user_choose_list[e.target.id].isCheck = !user_choose_list[e.target.id].isCheck
    this.setData({
      user_choose_list: user_choose_list
    })

  },
  hi: function (e) {

    var that = this
    var n_con = this.data.contents
    for (var i in n_con) {
      if (n_con[i].type == 'can') {
        n_con.splice(i, 1)
      }
    }
    this.setData({
      contents: n_con
    })
  },
  preview: function () {
    console.log(this.data.contents)
  },
  // 改变A+图片
  changeimg: function () {
    let statu1 = this.data.font_size;
    statu1 = !statu1;
    this.setData({
      font_size: statu1,
    })
  }
})
