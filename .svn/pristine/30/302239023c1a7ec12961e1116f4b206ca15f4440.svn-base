// pages/remove_member_page/remove_member_page.js
const App = getApp();
const clubApi = App.api('clubApi');
const wxService = App.wxService;
Page({
  data: {},

  /**
   * member list
   */
  __pushUserToArr: function (users, res) {
    const members = res.data.members
    if (members[0].users) {
      let member = members[0].users
      for (let i = 0; i < member.length; i++) {
        users.push(member[i])
      }
    }
    if (members[1].users) {
      let member = members[1].users
      for (let i = 0; i < member.length; i++) {
        member[i].roleTpye = 1;
        users.push(member[i])
      }
    }
    if (members[2].users) {
      let member = members[2].users
      for (let i = 0; i < member.length; i++) {
        users.push(member[i])
      }
    }
    if (members[3].users) {
      let member = members[3].users
      for (let i = 0; i < member.length; i++) {
        users.push(member[i])
      }
    }
    return users
  },

  /**
   * mamger list
   */
  __pushMamgerToArr: function (users, res) {
    const members = res.data.members
    if (members[2].users) {
      let member = members[2].users
      for (let i = 0; i < member.length; i++) {
        member[i].roleTpye = 1;
        users.push(member[i])
      }
    }
    return users
  },

  /**
   * member list
   */
  __pushMemberToArr: function (users, res) {
    const members = res.data.members
    if (members[3].users) {
      let member = members[3].users
      for (let i = 0; i < member.length; i++) {
        member[i].roleTpye = 1;
        users.push(member[i])
      }
    }
    return users
  },

  onLoad: function (e) {
    this.setData({
      type: e.type,
      clubID: e.clubID,
      remove: e.remove
    })
    let param = { data: {} }, that = this;
    param.data.club_id = e.clubID;
    param.data.flag = 1;
    clubApi.memeberList(param, res => {
      let users = []
      if (that.data.type == 1) {
        users = that.__pushMemberToArr(users, res);
      }else if (that.data.remove) {
        users = that.__pushMamgerToArr(users, res);
      } else {
        users = that.__pushUserToArr(users, res);
      }
      if (res.data.status == 1) {
        that.setData({
          members: users
        });
      }
    });
  },

  selectMember: function (e) {
    let userId = e.currentTarget.dataset.userid, members = this.data.members, userID = [];
    if (this.data.type == '0') {
      for (let i = 0; i < members.length; i++) {
        if (members[i].userID == userId) {
          members[i].roleTpye = 1;
          userID.push(members[i].userID);
        } else {
          members[i].roleTpye = 0
        }
      }
    } else {
      for (let i = 0; i < members.length; i++) {
        if (members[i].userID == userId) {
          if (members[i].roleTpye == 3) {
            members[i].roleTpye = 0;
          } else {
            members[i].roleTpye = 3;
          }
          userID.push(members[i].userID);
        }
      }
    }

    this.setData({
      members: members,
      userID: userID.join(',')
    })
  },


  appoint: function (e) {
    let result = e.currentTarget.dataset.result, that = this;
    let param = { data: {} };
    param.data.club_id = this.data.clubID;
    param.data.user_ids = this.data.userID
    if (this.data.type == '0') {
      param.data.role_type = 3;
    } else {
      param.data.role_type = 4;
    }
    clubApi.memeberRole(param, res => { }, res => { }, res => {
      if (res.data.status == 1) {
        // 0:voic chariman 1:manager
        wx.hideToast();
        let pages = getCurrentPages(), prevPage = pages[pages.length - 2];
        let btn = {}, members = that.data.members, users = [],
          ids = param.data.user_ids, removeId = '';
        if (this.data.type == '0') {
          btn.setBtn = '设置副会长';
          btn.removeBtn = '移除副会长';
          for (let i = 0; i < members.length; i++) {
            if (param.data.user_ids == members[i].userID) {
              users.push(members[i])
              removeId = ids;
            }
          }
        } else {
          btn.setBtn = '设置管理员';
          btn.removeBtn = '移除管理员';
          for (let i = 0; i < members.length; i++) {
            if (param.data.user_ids == members[i].userID) {
              users.push(members[i])
            }
          }
        }
        prevPage.setData({
          type: 2,
          btn: btn,
          voicChriman: users,
          removeId: removeId
        })
        wxService.navigateBack();
      } else {
       App.util.showTip(this,res.data.msg, 3000)
      }
    });
  },

  removeMamger: function () {
    let that = this, param = { data: {} };
    param.data.club_id = this.data.clubID;
    param.data.user_ids = this.data.userID
    param.data.role_type = 1;
    console.log(param);
    clubApi.memeberRole(param, res => {
      if (res.data.status == 1) {
        let pages = getCurrentPages(), prevPage = pages[pages.length - 2];
        let btn = {}, members = that.data.members;
        btn.setBtn = '设置管理员';
        btn.removeBtn = '移除管理员';
        prevPage.setData({
          type: 1,
          btn: btn,
          voicChriman: null
        })
        wxService.navigateBack();
      } else {
        console.log(res);
      }
    });

  },

  cancel: e => {
    App.wxService.navigateBack();
  }

})